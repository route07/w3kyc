/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MultisigExample,
  MultisigExampleInterface,
} from "../../../contracts/examples/MultisigExample";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_multisigManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "oldStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "newStatus",
        type: "bool",
      },
    ],
    name: "ActiveStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "oldValue",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newValue",
        type: "string",
      },
    ],
    name: "ConfigStringUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "ConfigValueUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "MultisigManagerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "configString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "configValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMultisigForActiveStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMultisigForConfigString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableMultisigForConfigValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredSignatures",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timelockDuration",
        type: "uint256",
      },
    ],
    name: "enableMultisigForActiveStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredSignatures",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timelockDuration",
        type: "uint256",
      },
    ],
    name: "enableMultisigForConfigString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredSignatures",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timelockDuration",
        type: "uint256",
      },
    ],
    name: "enableMultisigForConfigValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveStatusMultisigConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "requiredSignatures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct MultisigManager.MultisigConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfigStringMultisigConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "requiredSignatures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct MultisigManager.MultisigConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfigValueMultisigConfig",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isEnabled",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "requiredSignatures",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timelockDuration",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct MultisigManager.MultisigConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getConfiguration",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "stringValue",
        type: "string",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isActiveStatusMultisigRequired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConfigStringMultisigRequired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isConfigValueMultisigRequired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isMultisigManagerSet",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multisigManager",
    outputs: [
      {
        internalType: "contract MultisigManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_multisigManager",
        type: "address",
      },
    ],
    name: "setMultisigManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "newStatus",
        type: "bool",
      },
    ],
    name: "updateActiveStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newString",
        type: "string",
      },
    ],
    name: "updateConfigString",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "updateConfigValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001795380380620017958339810160408190526200003491620000c0565b6001600055600280546001600160a01b03191633179055806001600160a01b038116156200007857600180546001600160a01b0319166001600160a01b0383161790555b506064600355604080518082019091526007815266191959985d5b1d60ca1b6020820152600490620000ab908262000197565b50506005805460ff1916600117905562000263565b600060208284031215620000d357600080fd5b81516001600160a01b0381168114620000eb57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011d57607f821691505b6020821081036200013e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019257600081815260208120601f850160051c810160208610156200016d5750805b601f850160051c820191505b818110156200018e5782815560010162000179565b5050505b505050565b81516001600160401b03811115620001b357620001b3620000f2565b620001cb81620001c4845462000108565b8462000144565b602080601f831160018114620002035760008415620001ea5750858301515b600019600386901b1c1916600185901b1785556200018e565b600085815260208120601f198616915b82811015620002345788860151825594840194600190910190840162000213565b5085821015620002535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61152280620002736000396000f3fe608060405234801561001057600080fd5b506004361061014b5760003560e01c806376ba607b116100c35780638ba7fe811161007c5780638ba7fe81146102985780638da5cb5b146102ab5780639fbdb775146102d6578063afb55888146102e9578063ee970ef2146102f1578063f4692e09146102f957600080fd5b806376ba607b1461025257806378a97c1f1461025a5780637aee63b0146102625780637d18d8bd1461027557806380fcae231461027d578063868d88931461029057600080fd5b80631afaa7ef116101155780631afaa7ef146101bf57806322f3e2d4146101c757806326b8585f146101d45780632dc1d771146102135780634d395384146102265780636bd50cef1461023b57600080fd5b80626c51be14610150578062c5f1ad1461016c578063011a1b331461018457806317ff0697146101995780631a44a1e4146101ac575b600080fd5b61015960035481565b6040519081526020015b60405180910390f35b61017461030c565b6040519015158152602001610163565b610197610192366004610f6e565b610345565b005b6101976101a7366004610f87565b610479565b6101976101ba366004610f87565b61053c565b6101976105c0565b6005546101749060ff1681565b6101dc610674565b6040516101639190815115158152602080830151908201526040808301519082015260609182015115159181019190915260800190565b610197610221366004610f87565b6106ca565b61022e61074e565b6040516101639190610fef565b6102436107dc565b60405161016393929190611009565b61017461088e565b6101dc6108c3565b6001546001600160a01b03161515610174565b61017461091a565b61019761028b36600461104a565b61094f565b6101dc610ade565b6101976102a636600461110c565b610b35565b6002546102be906001600160a01b031681565b6040516001600160a01b039091168152602001610163565b6001546102be906001600160a01b031681565b610197610c83565b610197610d03565b610197610307366004611129565b610d83565b600061034060405180604001604052806011815260200170757064617465436f6e66696756616c756560781b815250610e0e565b905090565b604080518082019091526011815270757064617465436f6e66696756616c756560781b60208201526001546001600160a01b03161561043b576001546040516375df264d60e01b81526001600160a01b03909116906375df264d906103ae908490600401610fef565b602060405180830381865afa1580156103cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ef9190611152565b1561043b57600380549083905560408051828152602081018590527f6f15e0184a2fde8385b26f1ddaafdc454af5fec5adbb2b9dacdac58e9ad8fe8391015b60405180910390a1505050565b600380549083905560408051828152602081018590527f6f15e0184a2fde8385b26f1ddaafdc454af5fec5adbb2b9dacdac58e9ad8fe83910161042e565b6002546001600160a01b031633146104ac5760405162461bcd60e51b81526004016104a39061116f565b60405180910390fd5b6001546001600160a01b03166104d45760405162461bcd60e51b81526004016104a390611193565b600154604051630b5c89ab60e11b81526001600160a01b03909116906316b913569061050690859085906004016111ca565b600060405180830381600087803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b505050505050565b6002546001600160a01b031633146105665760405162461bcd60e51b81526004016104a39061116f565b6001546001600160a01b031661058e5760405162461bcd60e51b81526004016104a390611193565b600154604051630b5c89ab60e11b81526001600160a01b03909116906316b9135690610506908590859060040161120b565b6002546001600160a01b031633146105ea5760405162461bcd60e51b81526004016104a39061116f565b6001546001600160a01b03166106125760405162461bcd60e51b81526004016104a390611193565b600154604051639394fa1560e01b81526001600160a01b0390911690639394fa15906106409060040161123d565b600060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b50505050565b60408051608081018252600080825260208201819052918101829052606081019190915261034060405180604001604052806011815260200170757064617465436f6e66696756616c756560781b815250610ea0565b6002546001600160a01b031633146106f45760405162461bcd60e51b81526004016104a39061116f565b6001546001600160a01b031661071c5760405162461bcd60e51b81526004016104a390611193565b600154604051630b5c89ab60e11b81526001600160a01b03909116906316b9135690610506908590859060040161126f565b6004805461075b906112a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610787906112a1565b80156107d45780601f106107a9576101008083540402835291602001916107d4565b820191906000526020600020905b8154815290600101906020018083116107b757829003601f168201915b505050505081565b6000606060006003546004600560009054906101000a900460ff16818054610803906112a1565b80601f016020809104026020016040519081016040528092919081815260200182805461082f906112a1565b801561087c5780601f106108515761010080835404028352916020019161087c565b820191906000526020600020905b81548152906001019060200180831161085f57829003601f168201915b50505050509150925092509250909192565b60006103406040518060400160405280601281526020017175706461746541637469766553746174757360701b815250610e0e565b6040805160808101825260008082526020820181905291810182905260608101919091526103406040518060400160405280601281526020017175706461746541637469766553746174757360701b815250610ea0565b600061034060405180604001604052806012815260200171757064617465436f6e666967537472696e6760701b815250610e0e565b604080518082019091526012815271757064617465436f6e666967537472696e6760701b60208201526001546001600160a01b031615610acf576001546040516375df264d60e01b81526001600160a01b03909116906375df264d906109b9908490600401610fef565b602060405180830381865afa1580156109d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fa9190611152565b15610acf57600060048054610a0e906112a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3a906112a1565b8015610a875780601f10610a5c57610100808354040283529160200191610a87565b820191906000526020600020905b815481529060010190602001808311610a6a57829003601f168201915b505050505090508260049081610a9d9190611326565b507f2bf68bf2526df565fbca5ca75ba3870093c31d06aef46e371eed92a68a76dc06818460405161042e9291906113e6565b600060048054610a0e906112a1565b60408051608081018252600080825260208201819052918101829052606081019190915261034060405180604001604052806012815260200171757064617465436f6e666967537472696e6760701b815250610ea0565b60408051808201909152601281527175706461746541637469766553746174757360701b60208201526001546001600160a01b031615610c34576001546040516375df264d60e01b81526001600160a01b03909116906375df264d90610b9f908490600401610fef565b602060405180830381865afa158015610bbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be09190611152565b15610c34576005805483151560ff19821681179092556040805160ff909216801515835260208301939093527f4407899c7561c87ac07b2613bcc4033ceb3e3c442c00d83b2abae0f430c6c9f5910161042e565b6005805483151560ff19821681179092556040805160ff909216801515835260208301939093527f4407899c7561c87ac07b2613bcc4033ceb3e3c442c00d83b2abae0f430c6c9f5910161042e565b6002546001600160a01b03163314610cad5760405162461bcd60e51b81526004016104a39061116f565b6001546001600160a01b0316610cd55760405162461bcd60e51b81526004016104a390611193565b600154604051639394fa1560e01b81526001600160a01b0390911690639394fa159061064090600401611414565b6002546001600160a01b03163314610d2d5760405162461bcd60e51b81526004016104a39061116f565b6001546001600160a01b0316610d555760405162461bcd60e51b81526004016104a390611193565b600154604051639394fa1560e01b81526001600160a01b0390911690639394fa159061064090600401611446565b6002546001600160a01b03163314610dad5760405162461bcd60e51b81526004016104a39061116f565b600180546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f23e0a616efc76d766195373e42d10e0dcd75d41363639187f5e5e5580726d0fd910160405180910390a15050565b6001546000906001600160a01b0316610e2957506000919050565b6001546040516375df264d60e01b81526001600160a01b03909116906375df264d90610e59908590600401610fef565b602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190611152565b92915050565b6040805160808101825260008082526020820181905291810182905260608101919091526001546001600160a01b0316610efd57505060408051608081018252600080825260016020830152918101829052606081019190915290565b60015460405163fd055f6b60e01b81526001600160a01b039091169063fd055f6b90610f2d908590600401610fef565b608060405180830381865afa158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190611477565b600060208284031215610f8057600080fd5b5035919050565b60008060408385031215610f9a57600080fd5b50508035926020909101359150565b6000815180845260005b81811015610fcf57602081850181015186830182015201610fb3565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006110026020830184610fa9565b9392505050565b8381526060602082015260006110226060830185610fa9565b90508215156040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561105c57600080fd5b813567ffffffffffffffff8082111561107457600080fd5b818401915084601f83011261108857600080fd5b81358181111561109a5761109a611034565b604051601f8201601f19908116603f011681019083821181831017156110c2576110c2611034565b816040528281528760208487010111156110db57600080fd5b826020860160208301376000928101602001929092525095945050505050565b801515811461110957600080fd5b50565b60006020828403121561111e57600080fd5b8135611002816110fb565b60006020828403121561113b57600080fd5b81356001600160a01b038116811461100257600080fd5b60006020828403121561116457600080fd5b8151611002816110fb565b6020808252600a908201526927b7363c9037bbb732b960b11b604082015260600190565b60208082526018908201527f4d756c7469736967206d616e61676572206e6f74207365740000000000000000604082015260600190565b6060815260006111fb606083016011815270757064617465436f6e66696756616c756560781b602082015260400190565b6020830194909452506040015290565b6060815260006111fb606083016012815271757064617465436f6e666967537472696e6760701b602082015260400190565b602081526000610e9a602083016012815271757064617465436f6e666967537472696e6760701b602082015260400190565b6060815260006111fb60608301601281527175706461746541637469766553746174757360701b602082015260400190565b600181811c908216806112b557607f821691505b6020821081036112d557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561132157600081815260208120601f850160051c810160208610156113025750805b601f850160051c820191505b818110156105345782815560010161130e565b505050565b815167ffffffffffffffff81111561134057611340611034565b6113548161134e84546112a1565b846112db565b602080601f83116001811461138957600084156113715750858301515b600019600386901b1c1916600185901b178555610534565b600085815260208120601f198616915b828110156113b857888601518255948401946001909101908401611399565b50858210156113d65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006113f96040830185610fa9565b828103602084015261140b8185610fa9565b95945050505050565b602081526000610e9a60208301601281527175706461746541637469766553746174757360701b602082015260400190565b602081526000610e9a602083016011815270757064617465436f6e66696756616c756560781b602082015260400190565b60006080828403121561148957600080fd5b6040516080810181811067ffffffffffffffff821117156114ac576114ac611034565b60405282516114ba816110fb565b80825250602083015160208201526040830151604082015260608301516114e0816110fb565b6060820152939250505056fea2646970667358221220c20e9cbd02505fbea95ec8f66ace02c8b1f1be3b7c67c7bdcb9e1e947e6763cd64736f6c63430008130033";

type MultisigExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultisigExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultisigExample__factory extends ContractFactory {
  constructor(...args: MultisigExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _multisigManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_multisigManager, overrides || {});
  }
  override deploy(
    _multisigManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_multisigManager, overrides || {}) as Promise<
      MultisigExample & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultisigExample__factory {
    return super.connect(runner) as MultisigExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultisigExampleInterface {
    return new Interface(_abi) as MultisigExampleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MultisigExample {
    return new Contract(address, _abi, runner) as unknown as MultisigExample;
  }
}
