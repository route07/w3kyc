/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BatchOperationsSimple,
  BatchOperationsSimpleInterface,
} from "../../../contracts/business/BatchOperationsSimple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_kycDataStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_auditLogStorage",
        type: "address",
      },
      {
        internalType: "address",
        name: "_didCredentialStorage",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "writer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "AuthorizedWriterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "successCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "failureCount",
        type: "uint256",
      },
    ],
    name: "BatchKYCOperationCompleted",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_BATCH_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "tenantId",
            type: "string",
          },
          {
            internalType: "string",
            name: "jurisdiction",
            type: "string",
          },
          {
            internalType: "string",
            name: "documentHash",
            type: "string",
          },
        ],
        internalType: "struct BatchOperationsSimple.BatchKYCRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "_processSingleKYC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auditLogStorage",
    outputs: [
      {
        internalType: "contract AuditLogStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedWriters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    name: "batchUpdateKYCStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "didCredentialStorage",
    outputs: [
      {
        internalType: "contract DIDCredentialStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBatchLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "maxBatchSize",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "isAuthorizedWriter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kycDataStorage",
    outputs: [
      {
        internalType: "contract KYCDataStorage",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "string",
            name: "tenantId",
            type: "string",
          },
          {
            internalType: "string",
            name: "jurisdiction",
            type: "string",
          },
          {
            internalType: "string",
            name: "documentHash",
            type: "string",
          },
        ],
        internalType: "struct BatchOperationsSimple.BatchKYCRequest[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "batchId",
        type: "uint256",
      },
    ],
    name: "processBatchKYC",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "string",
            name: "errorMessage",
            type: "string",
          },
        ],
        internalType: "struct BatchOperationsSimple.BatchOperationResult[]",
        name: "results",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type BatchOperationsSimpleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchOperationsSimpleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchOperationsSimple__factory extends ContractFactory {
  constructor(...args: BatchOperationsSimpleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _kycDataStorage: AddressLike,
    _auditLogStorage: AddressLike,
    _didCredentialStorage: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _kycDataStorage,
      _auditLogStorage,
      _didCredentialStorage,
      overrides || {}
    );
  }
  override deploy(
    _kycDataStorage: AddressLike,
    _auditLogStorage: AddressLike,
    _didCredentialStorage: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _kycDataStorage,
      _auditLogStorage,
      _didCredentialStorage,
      overrides || {}
    ) as Promise<
      BatchOperationsSimple & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BatchOperationsSimple__factory {
    return super.connect(runner) as BatchOperationsSimple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchOperationsSimpleInterface {
    return new Interface(_abi) as BatchOperationsSimpleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchOperationsSimple {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BatchOperationsSimple;
  }
}
