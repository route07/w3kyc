/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export declare namespace BatchOperationsSimple {
  export type BatchKYCRequestStruct = {
    user: AddressLike;
    tenantId: string;
    jurisdiction: string;
    documentHash: string;
  };

  export type BatchKYCRequestStructOutput = [
    user: string,
    tenantId: string,
    jurisdiction: string,
    documentHash: string
  ] & {
    user: string;
    tenantId: string;
    jurisdiction: string;
    documentHash: string;
  };

  export type BatchOperationResultStruct = {
    success: boolean;
    errorMessage: string;
  };

  export type BatchOperationResultStructOutput = [
    success: boolean,
    errorMessage: string
  ] & { success: boolean; errorMessage: string };
}

export interface BatchOperationsSimpleInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "MAX_BATCH_SIZE"
      | "_processSingleKYC"
      | "auditLogStorage"
      | "authorizedWriters"
      | "batchUpdateKYCStatus"
      | "didCredentialStorage"
      | "getBatchLimits"
      | "isAuthorizedWriter"
      | "kycDataStorage"
      | "owner"
      | "processBatchKYC"
      | "setAuthorizedWriter"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "AuthorizedWriterUpdated"
      | "BatchKYCOperationCompleted"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "MAX_BATCH_SIZE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_processSingleKYC",
    values: [BatchOperationsSimple.BatchKYCRequestStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "auditLogStorage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "authorizedWriters",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "batchUpdateKYCStatus",
    values: [AddressLike[], boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "didCredentialStorage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getBatchLimits",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isAuthorizedWriter",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "kycDataStorage",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "processBatchKYC",
    values: [BatchOperationsSimple.BatchKYCRequestStruct[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setAuthorizedWriter",
    values: [AddressLike, boolean]
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_BATCH_SIZE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_processSingleKYC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "auditLogStorage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "authorizedWriters",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchUpdateKYCStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "didCredentialStorage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBatchLimits",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAuthorizedWriter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kycDataStorage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "processBatchKYC",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAuthorizedWriter",
    data: BytesLike
  ): Result;
}

export namespace AuthorizedWriterUpdatedEvent {
  export type InputTuple = [writer: AddressLike, authorized: boolean];
  export type OutputTuple = [writer: string, authorized: boolean];
  export interface OutputObject {
    writer: string;
    authorized: boolean;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace BatchKYCOperationCompletedEvent {
  export type InputTuple = [
    batchId: BigNumberish,
    successCount: BigNumberish,
    failureCount: BigNumberish
  ];
  export type OutputTuple = [
    batchId: bigint,
    successCount: bigint,
    failureCount: bigint
  ];
  export interface OutputObject {
    batchId: bigint;
    successCount: bigint;
    failureCount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface BatchOperationsSimple extends BaseContract {
  connect(runner?: ContractRunner | null): BatchOperationsSimple;
  waitForDeployment(): Promise<this>;

  interface: BatchOperationsSimpleInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MAX_BATCH_SIZE: TypedContractMethod<[], [bigint], "view">;

  _processSingleKYC: TypedContractMethod<
    [request: BatchOperationsSimple.BatchKYCRequestStruct],
    [void],
    "nonpayable"
  >;

  auditLogStorage: TypedContractMethod<[], [string], "view">;

  authorizedWriters: TypedContractMethod<
    [arg0: AddressLike],
    [boolean],
    "view"
  >;

  batchUpdateKYCStatus: TypedContractMethod<
    [users: AddressLike[], isActive: boolean],
    [void],
    "nonpayable"
  >;

  didCredentialStorage: TypedContractMethod<[], [string], "view">;

  getBatchLimits: TypedContractMethod<[], [bigint], "view">;

  isAuthorizedWriter: TypedContractMethod<
    [writer: AddressLike],
    [boolean],
    "view"
  >;

  kycDataStorage: TypedContractMethod<[], [string], "view">;

  owner: TypedContractMethod<[], [string], "view">;

  processBatchKYC: TypedContractMethod<
    [
      requests: BatchOperationsSimple.BatchKYCRequestStruct[],
      batchId: BigNumberish
    ],
    [BatchOperationsSimple.BatchOperationResultStructOutput[]],
    "nonpayable"
  >;

  setAuthorizedWriter: TypedContractMethod<
    [writer: AddressLike, authorized: boolean],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MAX_BATCH_SIZE"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "_processSingleKYC"
  ): TypedContractMethod<
    [request: BatchOperationsSimple.BatchKYCRequestStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "auditLogStorage"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "authorizedWriters"
  ): TypedContractMethod<[arg0: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "batchUpdateKYCStatus"
  ): TypedContractMethod<
    [users: AddressLike[], isActive: boolean],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "didCredentialStorage"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getBatchLimits"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "isAuthorizedWriter"
  ): TypedContractMethod<[writer: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "kycDataStorage"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "processBatchKYC"
  ): TypedContractMethod<
    [
      requests: BatchOperationsSimple.BatchKYCRequestStruct[],
      batchId: BigNumberish
    ],
    [BatchOperationsSimple.BatchOperationResultStructOutput[]],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setAuthorizedWriter"
  ): TypedContractMethod<
    [writer: AddressLike, authorized: boolean],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "AuthorizedWriterUpdated"
  ): TypedContractEvent<
    AuthorizedWriterUpdatedEvent.InputTuple,
    AuthorizedWriterUpdatedEvent.OutputTuple,
    AuthorizedWriterUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "BatchKYCOperationCompleted"
  ): TypedContractEvent<
    BatchKYCOperationCompletedEvent.InputTuple,
    BatchKYCOperationCompletedEvent.OutputTuple,
    BatchKYCOperationCompletedEvent.OutputObject
  >;

  filters: {
    "AuthorizedWriterUpdated(address,bool)": TypedContractEvent<
      AuthorizedWriterUpdatedEvent.InputTuple,
      AuthorizedWriterUpdatedEvent.OutputTuple,
      AuthorizedWriterUpdatedEvent.OutputObject
    >;
    AuthorizedWriterUpdated: TypedContractEvent<
      AuthorizedWriterUpdatedEvent.InputTuple,
      AuthorizedWriterUpdatedEvent.OutputTuple,
      AuthorizedWriterUpdatedEvent.OutputObject
    >;

    "BatchKYCOperationCompleted(uint256,uint256,uint256)": TypedContractEvent<
      BatchKYCOperationCompletedEvent.InputTuple,
      BatchKYCOperationCompletedEvent.OutputTuple,
      BatchKYCOperationCompletedEvent.OutputObject
    >;
    BatchKYCOperationCompleted: TypedContractEvent<
      BatchKYCOperationCompletedEvent.InputTuple,
      BatchKYCOperationCompletedEvent.OutputTuple,
      BatchKYCOperationCompletedEvent.OutputObject
    >;
  };
}
