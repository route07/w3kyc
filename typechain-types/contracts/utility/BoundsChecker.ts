/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface BoundsCheckerInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "MAX_ACTIONS"
      | "MAX_ARRAY_LENGTH"
      | "MAX_AUDIT_ENTRIES"
      | "MAX_CREDENTIALS"
      | "MAX_JURISDICTIONS"
      | "MAX_OPERATIONS"
      | "MAX_SIGNERS"
      | "MAX_TENANTS"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "MAX_ACTIONS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_ARRAY_LENGTH",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_AUDIT_ENTRIES",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_CREDENTIALS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_JURISDICTIONS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_OPERATIONS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_SIGNERS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MAX_TENANTS",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "MAX_ACTIONS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_ARRAY_LENGTH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_AUDIT_ENTRIES",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_CREDENTIALS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_JURISDICTIONS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_OPERATIONS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_SIGNERS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MAX_TENANTS",
    data: BytesLike
  ): Result;
}

export interface BoundsChecker extends BaseContract {
  connect(runner?: ContractRunner | null): BoundsChecker;
  waitForDeployment(): Promise<this>;

  interface: BoundsCheckerInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  MAX_ACTIONS: TypedContractMethod<[], [bigint], "view">;

  MAX_ARRAY_LENGTH: TypedContractMethod<[], [bigint], "view">;

  MAX_AUDIT_ENTRIES: TypedContractMethod<[], [bigint], "view">;

  MAX_CREDENTIALS: TypedContractMethod<[], [bigint], "view">;

  MAX_JURISDICTIONS: TypedContractMethod<[], [bigint], "view">;

  MAX_OPERATIONS: TypedContractMethod<[], [bigint], "view">;

  MAX_SIGNERS: TypedContractMethod<[], [bigint], "view">;

  MAX_TENANTS: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "MAX_ACTIONS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_ARRAY_LENGTH"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_AUDIT_ENTRIES"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_CREDENTIALS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_JURISDICTIONS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_OPERATIONS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_SIGNERS"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "MAX_TENANTS"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
